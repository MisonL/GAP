# 在这里填入你的 Gemini API 密钥。
# 如果有多个密钥，请用逗号分隔，例如：GEMINI_API_KEYS="key1,key2,key3"
# 请替换为您的实际API密钥
# 请务必将下面的 YOUR_REAL_GEMINI_API_KEY_HERE 替换为你自己的有效 Gemini API 密钥！
# 如果有多个密钥，请用逗号分隔。
GEMINI_API_KEYS="YOUR_REAL_GEMINI_API_KEY_HERE"

# （可选）设置访问密码。如果留空或注释掉此行，将使用默认密码 "123"。
PASSWORD="your_secure_password"

# （可选）禁用 Gemini API 的安全过滤。设置为 "true" 将对所有请求禁用安全过滤。
# 警告：禁用安全过滤可能会导致模型生成不当或有害内容。请谨慎使用。
# 默认值为 "false"。
DISABLE_SAFETY_FILTERING=false

# （可选）是否为状态页面启用密码保护。如果为 "true"，则需要登录才能查看状态页面的详细信息。
# 默认值为 "false"。
PROTECT_STATUS_PAGE=true

# 速率限制设置
# 每分钟最大请求数，默认值为60
MAX_REQUESTS_PER_MINUTE=60
# 每天每个IP最大请求数，默认值为6000
MAX_REQUESTS_PER_DAY_PER_IP=6000

# 日志配置
# 日志文件最大大小（MB），默认为10MB
MAX_LOG_SIZE=10
# 日志文件保留的备份数量，默认为5个
MAX_LOG_BACKUPS=5
# 日志轮转间隔，默认为midnight（每天午夜）
LOG_ROTATION_INTERVAL=midnight
# 日志文件保留天数，超过该天数的日志将被自动清理，默认为30天
LOG_CLEANUP_DAYS=30

# 调试模式，设置为true开启详细日志，默认为false (主要影响 Uvicorn 的 reload 和 log level)
DEBUG=false

# （可选）周期性报告的日志级别 (DEBUG, INFO, WARNING, ERROR, CRITICAL)，默认为 INFO
#REPORT_LOG_LEVEL=DEBUG

# （可选）使用情况报告间隔（分钟），默认为30分钟
USAGE_REPORT_INTERVAL_MINUTES=30

# (可选) Key 分数缓存刷新间隔（秒），默认为 10
#CACHE_REFRESH_INTERVAL_SECONDS=10

# --- 上下文管理 (v1.3.0 新增) ---

# (必需) Web UI Session 密钥，请务必修改为一个长且随机的安全字符串！
# 可以使用 `openssl rand -hex 32` 或类似命令生成
# 请务必将下面的 placeholder_strong_secret_key 替换为一个长且随机的安全字符串！
# 可以使用 `openssl rand -hex 32` 或类似命令生成。
SECRET_KEY="placeholder_strong_secret_key_please_replace_me_12345"

# (可选) JWT 签名算法，默认为 HS256
#JWT_ALGORITHM="HS256"

# (可选) JWT 访问令牌有效期（分钟），默认为 30
#ACCESS_TOKEN_EXPIRE_MINUTES=30

# (可选) SQLite 数据库文件路径。如果注释掉或留空，将使用内存数据库 :memory:
#CONTEXT_DB_PATH="app/data/context_store.db"

# (可选) 当模型未在 model_limits.json 中定义 input_token_limit 时的回退 Token 限制，默认为 30000
DEFAULT_MAX_CONTEXT_TOKENS=30000

# (可选) 从模型 input_token_limit 计算截断阈值时减去的安全边际，默认为 200
CONTEXT_TOKEN_SAFETY_MARGIN=200

# (可选) 内存上下文清理运行间隔（秒），默认 3600 秒 (1 小时)
MEMORY_CONTEXT_CLEANUP_INTERVAL_SECONDS=3600

# (可选) 内存模式下最大上下文记录数，默认为 5000
#MAX_CONTEXT_RECORDS_MEMORY=5000
# --- Admin Configuration ---
# 管理员 API Key，用于管理所有上下文和 Key（本地模式）
ADMIN_API_KEY=your_admin_api_key_here